# Generated by Django 4.1.10 on 2024-03-02 05:46

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('showcase', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BlackJack',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='BlackJack Game Name')),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
            ],
            options={
                'verbose_name': 'BlackJack Game',
                'verbose_name_plural': 'BlackJack Games',
            },
        ),
        migrations.CreateModel(
            name='GameHub',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Game Name')),
                ('type', models.CharField(blank=True, choices=[('T', 'Traditional'), ('C', 'Club')], max_length=1, null=True)),
                ('filter', models.CharField(blank=True, choices=[('F', 'Featured'), ('P', 'Popular'), ('N', 'New')], max_length=1, null=True)),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
            ],
            options={
                'verbose_name': 'Game Hub',
                'verbose_name_plural': 'Game Hub',
            },
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, help_text="Name your inventory. Leave blank to use (your name)'s inventory", max_length=200, null=True, verbose_name='Inventory Name')),
                ('image', models.ImageField(help_text='Inventory Image.', upload_to='')),
                ('image_length', models.PositiveIntegerField(blank=True, default=100, help_text='Original length of the advertisement (use for original ratio).', null=True, verbose_name='image length')),
                ('image_width', models.PositiveIntegerField(blank=True, default=100, help_text='Original width of the advertisement (use for original ratio).', null=True, verbose_name='image width')),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Player Inventory',
                'verbose_name_plural': 'Player Inventories',
            },
        ),
        migrations.CreateModel(
            name='Meme',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('image', models.ImageField(upload_to='images/')),
                ('font_size', models.IntegerField(blank=True, null=True, verbose_name='Font Size')),
                ('image_length', models.PositiveIntegerField(blank=True, default=100, help_text='Original length of the advertisement (use for original ratio).', null=True, verbose_name='image length')),
                ('image_width', models.PositiveIntegerField(blank=True, default=100, help_text='Original width of the advertisement (use for original ratio).', null=True, verbose_name='image width')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Meme Creator')),
            ],
            options={
                'verbose_name': 'Meme Text',
                'verbose_name_plural': 'Meme Texts',
            },
        ),
        migrations.AlterModelOptions(
            name='currencyorder',
            options={'verbose_name': 'Individiual Currency Order', 'verbose_name_plural': 'Individiual Currency Orders'},
        ),
        migrations.RemoveField(
            model_name='message',
            name='image',
        ),
        migrations.RemoveField(
            model_name='socialmedia',
            name='image',
        ),
        migrations.RemoveField(
            model_name='staffprofile',
            name='position',
        ),
        migrations.AddField(
            model_name='currencyorder',
            name='quantity',
            field=models.IntegerField(default=1),
        ),
        migrations.AddField(
            model_name='event',
            name='numeric_quantifier',
            field=models.FloatField(default=1),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='event',
            name='qualitative_qualifier',
            field=models.CharField(default=1, max_length=500),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='message',
            name='file',
            field=models.FileField(blank=True, null=True, upload_to='images/'),
        ),
        migrations.AddField(
            model_name='room',
            name='logo',
            field=models.FileField(blank=True, null=True, upload_to='', verbose_name='Logo'),
        ),
        migrations.AddField(
            model_name='room',
            name='public',
            field=models.BooleanField(default=False, verbose_name='Make Public?'),
        ),
        migrations.AddField(
            model_name='room',
            name='time',
            field=models.DateTimeField(blank=True, default=django.utils.timezone.now),
        ),
        migrations.AddField(
            model_name='socialmedia',
            name='icon',
            field=models.ImageField(blank=True, null=True, upload_to='', verbose_name='Social Media Logo'),
        ),
        migrations.AddField(
            model_name='socialmedia',
            name='staff_profile',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='showcase.staffprofile'),
        ),
        migrations.AddField(
            model_name='staffprofile',
            name='date_and_time',
            field=models.DateTimeField(null=True, verbose_name='Time and date of Staff Profile Creation'),
        ),
        migrations.AddField(
            model_name='staffprofile',
            name='role_position',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='auth.group', verbose_name='Position'),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='tradeoffer',
            name='quantity',
            field=models.IntegerField(default=1),
        ),
        migrations.AddField(
            model_name='tradeoffer',
            name='slug',
            field=models.SlugField(blank=True, unique=True),
        ),
        migrations.AddField(
            model_name='tradeoffer',
            name='title',
            field=models.CharField(default=1, help_text='Name of your trade offer.', max_length=100),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='tradeoffer',
            name='trade_status',
            field=models.IntegerField(choices=[(0, 'Pending'), (1, 'Accepted'), (2, 'Declined')], default=0),
        ),
        migrations.AddField(
            model_name='updateprofile',
            name='date_and_time',
            field=models.DateTimeField(auto_now_add=True, null=True, verbose_name='time and date'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='currency',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='showcase.currency'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='currency_amount',
            field=models.IntegerField(default=0, verbose_name='Currency Amount'),
        ),
        migrations.AlterField(
            model_name='contact',
            name='inquiry',
            field=models.CharField(max_length=100, verbose_name='Subject'),
        ),
        migrations.AlterField(
            model_name='currencyorder',
            name='ordered_date',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AlterField(
            model_name='feedback',
            name='slug',
            field=models.SlugField(blank=True, help_text='Leave blank to use corresponding product slug.', max_length=200, null=True),
        ),
        migrations.AlterField(
            model_name='staffprofile',
            name='name',
            field=models.CharField(help_text='Your name goes here. If you wish to stay anonymous, put "Anonymous".', max_length=100),
        ),
        migrations.AlterField(
            model_name='staffprofile',
            name='staff_feats',
            field=models.TextField(help_text='Let us know of your transcendental feats of making PokeTrove a better place.', verbose_name='Staff feats'),
        ),
        migrations.AlterField(
            model_name='tradeoffer',
            name='estimated_trading_value',
            field=models.DecimalField(decimal_places=2, help_text='Estimated Market Price of Trade Item (will be displayed to potential traders)', max_digits=12),
        ),
        migrations.AlterField(
            model_name='tradeoffer',
            name='user2',
            field=models.ForeignKey(blank=True, help_text='Optional', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Receiver', to=settings.AUTH_USER_MODEL, verbose_name='Recipient'),
        ),
        migrations.AlterField(
            model_name='userprofile',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_profile', to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='Wager',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField(verbose_name='Bet Amount')),
                ('outcome', models.CharField(blank=True, choices=[('W', 'Win'), ('L', 'Lose'), ('D', 'Draw'), ('B', 'BlackJack')], default=None, max_length=1, null=True)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('user_profile', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='showcase.userprofile')),
            ],
        ),
        migrations.CreateModel(
            name='Trade',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Out of stock?')),
                ('trade_offers', models.ManyToManyField(to='showcase.tradeoffer')),
                ('users', models.ManyToManyField(related_name='traders', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Trade',
                'verbose_name_plural': 'Trades',
            },
        ),
        migrations.CreateModel(
            name='RespondingTradeOffer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('estimated_trading_value', models.DecimalField(decimal_places=2, help_text='Estimated Market Price of Trade Item (will be displayed to potential traders)', max_digits=12)),
                ('message', models.CharField(blank=True, max_length=2000, null=True)),
                ('slug', models.SlugField(blank=True, editable=False, null=True, unique=True)),
                ('trade_status', models.IntegerField(choices=[(0, 'Pending'), (1, 'Accepted'), (2, 'Declined')], default=0)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('quantity', models.IntegerField(default=1)),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Out of stock?')),
                ('offered_trade_items', models.ManyToManyField(to='showcase.tradeitem')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Dealer', to=settings.AUTH_USER_MODEL, verbose_name='Dealer')),
                ('user2', models.ForeignKey(blank=True, help_text='Optional', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='Recipient', to=settings.AUTH_USER_MODEL, verbose_name='Recipient')),
                ('wanted_trade_items', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='showcase.tradeoffer')),
            ],
            options={
                'verbose_name': 'Trade Offer Response',
                'verbose_name_plural': 'Trade Offer Responses',
            },
        ),
        migrations.CreateModel(
            name='MemeTextField',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(null=True)),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
                ('meme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='text_fields', to='showcase.meme')),
            ],
            options={
                'verbose_name': 'Meme Text Field',
                'verbose_name_plural': 'Meme Texts Fields',
            },
        ),
        migrations.CreateModel(
            name='InventoryObject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('choice_text', models.CharField(blank=True, max_length=200, null=True, verbose_name='Choice Text')),
                ('image', models.ImageField(blank=True, null=True, upload_to='')),
                ('image_length', models.PositiveIntegerField(blank=True, default=100, help_text='Original length of the advertisement (use for original ratio).', null=True, verbose_name='image length')),
                ('image_width', models.PositiveIntegerField(blank=True, default=100, help_text='Original width of the advertisement (use for original ratio).', null=True, verbose_name='image width')),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
                ('choice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='showcase.choice')),
                ('inventory', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='showcase.inventory')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Player Inventory Object',
                'verbose_name_plural': 'Player Inventory Objects',
            },
        ),
        migrations.CreateModel(
            name='CurrencyFullOrder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ref_code', models.CharField(blank=True, max_length=20, null=True)),
                ('start_date', models.DateTimeField(auto_now_add=True)),
                ('ordered_date', models.DateTimeField()),
                ('ordered', models.BooleanField(default=False)),
                ('being_delivered', models.BooleanField(default=False)),
                ('received', models.BooleanField(default=False)),
                ('refund_requested', models.BooleanField(default=False)),
                ('refund_granted', models.BooleanField(default=False)),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Is this an active order?')),
                ('coupon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='showcase.coupon')),
                ('itemhistory', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='showcase.currencymarket', verbose_name='Order history')),
                ('items', models.ManyToManyField(to='showcase.currencyorder')),
                ('payment', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='showcase.payment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Total Currency Order',
                'verbose_name_plural': 'Total Currency Orders',
            },
        ),
        migrations.CreateModel(
            name='FriendRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.IntegerField(choices=[(0, 'Pending'), (1, 'Accepted'), (2, 'Declined')], default=0)),
                ('receiver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_requests', to=settings.AUTH_USER_MODEL)),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_requests', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Friend Request',
                'verbose_name_plural': 'Friend Requests',
                'unique_together': {('sender', 'receiver')},
            },
        ),
        migrations.CreateModel(
            name='Friend',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('friend', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='friends', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'friend')},
            },
        ),
    ]
