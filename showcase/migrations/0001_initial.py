# Generated by Django 4.1.10 on 2023-10-11 17:36

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import django_countries.fields
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='AboutBackgroundImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('cover', models.ImageField(upload_to='images/')),
            ],
            options={
                'verbose_name': 'About Background Image',
                'verbose_name_plural': 'About Background Images',
            },
        ),
        migrations.CreateModel(
            name='AccountBackgroundImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('cover', models.ImageField(upload_to='images/')),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
            ],
            options={
                'verbose_name': 'Account Background Image',
                'verbose_name_plural': 'Account Background Images',
            },
        ),
        migrations.CreateModel(
            name='AddonsBackgroundImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('cover', models.ImageField(upload_to='images/')),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
            ],
            options={
                'verbose_name': 'Addons Background Image',
                'verbose_name_plural': 'Addons Background Images',
            },
        ),
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street_address', models.CharField(max_length=100)),
                ('apartment_address', models.CharField(max_length=100)),
                ('country', django_countries.fields.CountryField(max_length=2)),
                ('zip', models.CharField(max_length=100)),
                ('address_type', models.CharField(choices=[('B', 'Billing'), ('S', 'Shipping')], max_length=1000)),
                ('default', models.BooleanField(default=False)),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Is this an active address?')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Addresses',
            },
        ),
        migrations.CreateModel(
            name='AdminPages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pages', models.CharField(max_length=30, verbose_name='Administration pages')),
                ('description', models.TextField(default='', help_text='Page description')),
                ('hyperlink', models.CharField(max_length=100, verbose_name='Page hyperlinks')),
                ('opennew', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False, help_text='Please note all Administration Interface Pages should open in a new tab.', verbose_name='Open In New Tab?')),
                ('section', models.IntegerField(help_text='Position of the page link.', verbose_name='position')),
                ('page_name', models.TextField(blank='True', null='True', verbose_name='Page Name')),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Is this an active page?')),
            ],
            options={
                'verbose_name_plural': 'Administrative Pages',
            },
        ),
        migrations.CreateModel(
            name='AdminRoles',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', models.CharField(max_length=30, verbose_name='Administration role')),
                ('role_description', models.TextField(blank='True', null='True', verbose_name='Role Overview')),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Is this role currently active?')),
            ],
            options={
                'verbose_name_plural': 'Administrative Roles',
            },
        ),
        migrations.CreateModel(
            name='AdminTasks',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('task', models.CharField(max_length=30, verbose_name='Administration tasks')),
                ('hyperlink', models.CharField(blank='True', help_text='Only add if necessary', max_length=100, null='True', verbose_name='Task hyperlink')),
                ('opennew', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False, help_text='Please note all Administration Interface Pages should open in a new tab.', verbose_name='Open In New Tab?')),
                ('section', models.IntegerField(help_text='Position of the page link.', verbose_name='position')),
                ('page_name', models.TextField(blank='True', null='True', verbose_name='Page Name')),
                ('image', models.ImageField(upload_to='', verbose_name='Task image')),
                ('image_length', models.PositiveIntegerField(blank=True, default=100, help_text='Original length of the advertisement (use for original ratio).', null=True, verbose_name='image length')),
                ('image_width', models.PositiveIntegerField(blank=True, default=100, help_text='Original width of the advertisement (use for original ratio).', null=True, verbose_name='image width')),
                ('length_for_resize', models.PositiveIntegerField(default=100, verbose_name='Resized Length')),
                ('width_for_resize', models.PositiveIntegerField(default=100, verbose_name='Resized Width')),
                ('alternate', models.TextField(verbose_name='Alternate text')),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Is this task currently active?')),
            ],
            options={
                'verbose_name_plural': 'Administrative Tasks',
            },
        ),
        migrations.CreateModel(
            name='AdvertisementBase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('advertisementtitle', models.CharField(help_text='Advertisement title.', max_length=100, verbose_name='advertisement title')),
                ('advertisement', models.ImageField(height_field='advertisement_width', help_text='Image of the advertisement.', upload_to='images/', width_field='advertisement_length')),
                ('advertisement_file', models.FileField(blank=True, null=True, upload_to='images/', verbose_name='Non-image File')),
                ('advertisement_length', models.PositiveIntegerField(blank=True, default='100', help_text='Original length of the advertisement (use for original ratio).', null=True, verbose_name='advertisement length')),
                ('advertisement_width', models.PositiveIntegerField(blank=True, default='100', help_text='Original width of the advertisement (use for original ratio).', null=True, verbose_name='advertisement width')),
                ('length_for_resize', models.PositiveIntegerField(default=100, verbose_name='Resized Length')),
                ('width_for_resize', models.PositiveIntegerField(default=100, verbose_name='Resized Width')),
                ('advertisement_position', models.IntegerField(help_text='Positioning of the advertisement.', verbose_name='Position')),
                ('page', models.TextField(verbose_name='Page Name')),
                ('xposition', models.IntegerField(help_text='x-position.', verbose_name='x-position')),
                ('yposition', models.IntegerField(help_text='x-position.', verbose_name='y-position')),
                ('relevance', models.TextField(help_text='Relevance of advertisement')),
                ('type', models.CharField(help_text='Type of product.', max_length=200)),
                ('advertisement_hyperlink', models.TextField(verbose_name='Hyperlink')),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
            ],
            options={
                'verbose_name': 'Advertisement Base',
                'verbose_name_plural': 'Advertisement Base',
            },
        ),
        migrations.CreateModel(
            name='BackgroundImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('cover', models.ImageField(upload_to='images/')),
                ('page', models.TextField()),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
            ],
            options={
                'verbose_name': 'Background Image',
                'verbose_name_plural': 'Background Images',
            },
        ),
        migrations.CreateModel(
            name='BackgroundImageBase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('backgroundtitle', models.TextField(verbose_name='Background Title')),
                ('cover', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('image_width', models.PositiveIntegerField(blank=True, default=100, help_text='Width of the image (in percent relative).', null=True, verbose_name='image width')),
                ('image_length', models.PositiveIntegerField(blank=True, default=100, help_text='Length of the image (in percent relative).', null=True, verbose_name='image length')),
                ('file', models.FileField(blank=True, null=True, upload_to='images/', verbose_name='Non-image File')),
                ('alternate', models.TextField(verbose_name='Alternate Text')),
                ('page', models.TextField(verbose_name='Page Name')),
                ('url', models.URLField(verbose_name='Page URL')),
                ('position', models.IntegerField(default=1, verbose_name='Image Position')),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
            ],
            options={
                'verbose_name': 'Background Image Base',
                'verbose_name_plural': 'Background Image Base',
            },
        ),
        migrations.CreateModel(
            name='BanAppeal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Your name and tag go here.', max_length=100)),
                ('Rule_broken', models.CharField(help_text='Tell us the numbers of the rule(s) you broke. Refer to our rules page to see the rules and their corresponding numbers.', max_length=200)),
                ('Why_I_should_have_my_ban_revoked', models.TextField(help_text='Tell us why we should unban you, and tell us you can do to fix your mistake. If you think your punishment is a mistake, tell us why.', verbose_name='Why I should have my ban revoked.')),
                ('Additional_comments', models.TextField(help_text='Put any additional evidence or comments you may have here.')),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
            ],
            options={
                'verbose_name': 'Ban Appeal',
                'verbose_name_plural': 'Ban Appeals',
            },
        ),
        migrations.CreateModel(
            name='BanAppealBackgroundImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('cover', models.ImageField(upload_to='images/')),
            ],
            options={
                'verbose_name': 'Ban Appliciations Background Image',
                'verbose_name_plural': 'Ban Applications Background Images',
            },
        ),
        migrations.CreateModel(
            name='BaseCopyrightTextField',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('copyright', models.TextField(help_text='Copyright And Year', verbose_name='Copyright Field')),
                ('page', models.TextField(verbose_name='Page Name')),
                ('hyperlink', models.TextField(verbose_name='Hyperlink')),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
            ],
            options={
                'verbose_name': 'Base Text Field Copyright',
                'verbose_name_plural': 'Base Text Field Copyright',
            },
        ),
        migrations.CreateModel(
            name='BilletBackgroundImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('cover', models.ImageField(upload_to='images/')),
            ],
            options={
                'verbose_name': 'Billet Background Image',
                'verbose_name_plural': 'Billet Background Images',
            },
        ),
        migrations.CreateModel(
            name='Blog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200, unique=True)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('type', models.CharField(blank=True, choices=[('F', 'Featured'), ('N', 'New'), ('P', 'Popular'), ('EC', "Editor's Choice")], max_length=2, null=True)),
                ('updated_on', models.DateTimeField(auto_now=True, verbose_name='updated on: ')),
                ('content', models.TextField()),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('position', models.IntegerField(blank=True, null=True)),
                ('minute_read', models.IntegerField(blank=True, null=True, verbose_name='Time to read (in minutes)')),
                ('status', models.IntegerField(choices=[(0, 'Draft'), (1, 'Publish')], default=0)),
                ('image', models.ImageField(upload_to='images/')),
                ('image_length', models.PositiveIntegerField(blank=True, default=100, help_text='Original length of the advertisement (use for original ratio).', null=True, verbose_name='image length')),
                ('image_width', models.PositiveIntegerField(blank=True, default=100, help_text='Original width of the advertisement (use for original ratio).', null=True, verbose_name='image width')),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blog_posts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Blog Entry',
                'verbose_name_plural': 'Blog Entries',
                'ordering': ['-created_on'],
            },
        ),
        migrations.CreateModel(
            name='BlogBackgroundImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(verbose_name='Title')),
                ('cover', models.ImageField(upload_to='images/', verbose_name='Cover')),
            ],
            options={
                'verbose_name': 'Blog Background Image',
                'verbose_name_plural': 'Blog Background Images',
            },
        ),
        migrations.CreateModel(
            name='BlogFilter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('blog_filter', models.CharField(blank=True, max_length=200, null=True, verbose_name='Hashtag filters')),
                ('clicks', models.IntegerField(blank=True, null=True, verbose_name='Popularity')),
                ('image', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Filter Image')),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
            ],
            options={
                'verbose_name': 'Blog Filter',
                'verbose_name_plural': 'Blog Filters',
            },
        ),
        migrations.CreateModel(
            name='BlogHeader',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=200, verbose_name='Category')),
                ('image', models.ImageField(upload_to='images/')),
                ('position', models.IntegerField(default=1, verbose_name='Position')),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
            ],
            options={
                'verbose_name': 'Blog Header',
                'verbose_name_plural': 'Blog Headers',
            },
        ),
        migrations.CreateModel(
            name='BusinessMailingContact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('email', models.EmailField(max_length=200, verbose_name='Recipient')),
                ('inquiry', models.CharField(max_length=100)),
                ('message', models.TextField()),
            ],
            options={
                'verbose_name': 'Business Mailing Message',
                'verbose_name_plural': 'Business Mailing Messages',
            },
        ),
        migrations.CreateModel(
            name='BusinessMessageBackgroundImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('cover', models.ImageField(upload_to='images/')),
            ],
            options={
                'verbose_name': 'Business Message Background Image',
                'verbose_name_plural': 'Business Message Background Images',
            },
        ),
        migrations.CreateModel(
            name='ChangePasswordBackgroundImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('cover', models.ImageField(upload_to='images/')),
            ],
            options={
                'verbose_name': 'Change Password Background Image',
                'verbose_name_plural': 'Change Password Background Images',
            },
        ),
        migrations.CreateModel(
            name='ChatBackgroundImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('cover', models.ImageField(upload_to='images/')),
            ],
            options={
                'verbose_name': 'Chat Background Image',
                'verbose_name_plural': 'Chat Background Images',
            },
        ),
        migrations.CreateModel(
            name='CheckoutBackgroundImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('cover', models.ImageField(upload_to='images/')),
            ],
            options={
                'verbose_name': 'Checkout Background Image',
                'verbose_name_plural': 'Checkout Background Images',
            },
        ),
        migrations.CreateModel(
            name='City',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('state', models.CharField(max_length=255)),
            ],
            options={
                'verbose_name_plural': 'Cities',
            },
        ),
        migrations.CreateModel(
            name='CommitmentBackgroundImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('cover', models.ImageField(upload_to='images/')),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
            ],
            options={
                'verbose_name': 'Commitment Background Image',
                'verbose_name_plural': 'Commitment Background Images',
            },
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField()),
                ('email', models.EmailField(max_length=200, verbose_name='Recipient')),
                ('inquiry', models.CharField(max_length=100)),
                ('message', models.TextField()),
            ],
            options={
                'verbose_name': 'Contact Message',
                'verbose_name_plural': 'Contact Messages',
            },
        ),
        migrations.CreateModel(
            name='ContactBackgroundImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('cover', models.ImageField(upload_to='images/')),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
            ],
            options={
                'verbose_name': 'Contact Background Image',
                'verbose_name_plural': 'Contact Background Images',
            },
        ),
        migrations.CreateModel(
            name='ContentBackgroundImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('cover', models.ImageField(upload_to='images/')),
            ],
            options={
                'verbose_name': 'Content Background Image',
                'verbose_name_plural': 'Content Background Images',
            },
        ),
        migrations.CreateModel(
            name='ContributorBackgroundImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('cover', models.ImageField(upload_to='images/')),
            ],
            options={
                'verbose_name': 'Contributors Background Image',
                'verbose_name_plural': 'Contributors Background Images',
            },
        ),
        migrations.CreateModel(
            name='ConvertBackgroundImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('cover', models.ImageField(upload_to='images/')),
            ],
            options={
                'verbose_name': 'Convert Background Image',
                'verbose_name_plural': 'Convert Background Images',
            },
        ),
        migrations.CreateModel(
            name='CostBackgroundImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('cover', models.ImageField(upload_to='images/')),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
            ],
            options={
                'verbose_name': 'Cost Background Image',
                'verbose_name_plural': 'Cost Background Images',
            },
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=150)),
                ('amount', models.FloatField()),
                ('percentDollars', models.BooleanField(default=False, verbose_name='Percent-off Coupon')),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Is this an active coupon?')),
            ],
        ),
        migrations.CreateModel(
            name='DonateIcon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('row', models.IntegerField()),
                ('cover', models.ImageField(upload_to='images/')),
            ],
            options={
                'verbose_name': 'Donation Icon',
                'verbose_name_plural': 'Donation Icons',
            },
        ),
        migrations.CreateModel(
            name='EBackgroundImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('cover', models.ImageField(upload_to='images/')),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
            ],
            options={
                'verbose_name': 'Ecommerce Background Image',
                'verbose_name_plural': 'Ecommerce Background Images',
            },
        ),
        migrations.CreateModel(
            name='EmailField',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(help_text='Sign up for our newsletter to get the latest news and gossip! We will never share your personal information with anyone without your explicit permission. Unsubscribe at any time. ', max_length=254, unique=True)),
                ('confirmation', models.BooleanField(help_text='By clicking this box, I agree to receive emails, coupons and discounts from PokeTrove. I also understand that I may unsubscribe at any time and PokeTrove will not share my personal information with anyone without my explicit permission.')),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
            ],
            options={
                'verbose_name': 'Email',
                'verbose_name_plural': 'Emails',
            },
        ),
        migrations.CreateModel(
            name='EventBackgroundImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('cover', models.ImageField(upload_to='images/')),
            ],
            options={
                'verbose_name': 'Event Background Image',
                'verbose_name_plural': 'Event Background Images',
            },
        ),
        migrations.CreateModel(
            name='FaqBackgroundImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('cover', models.ImageField(upload_to='images/')),
            ],
            options={
                'verbose_name': 'FAQ Background Image',
                'verbose_name_plural': 'FAQ Background Images',
            },
        ),
        migrations.CreateModel(
            name='FaviconBase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('favicontitle', models.TextField(verbose_name='Favicon Title')),
                ('faviconcover', models.ImageField(upload_to='images/', verbose_name='Favicon')),
                ('favicon_length', models.PositiveIntegerField(blank=True, default='100', help_text='Original length of the favicon (use for original ratio).', null=True, verbose_name='favicon length')),
                ('favicon_width', models.PositiveIntegerField(blank=True, default='100', help_text='Original width of the favicon (use for original ratio).', null=True, verbose_name='favicon width')),
                ('length_for_resize', models.PositiveIntegerField(default=100, verbose_name='Resized Length')),
                ('width_for_resize', models.PositiveIntegerField(default=100, verbose_name='Resized Width')),
                ('faviconpage', models.TextField(verbose_name='Page Name')),
                ('faviconurl', models.URLField(verbose_name='Page URL')),
                ('faviconlink', models.URLField(verbose_name='Favicon Link')),
                ('faviconsizes', models.TextField(help_text='example: 180x180', verbose_name='Favicon Sizes')),
                ('faviconrelationship', models.TextField(help_text='example: icon', verbose_name='Favicon Relationship')),
                ('favicontype', models.TextField(help_text='example: ico', verbose_name='Favicon Type')),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
            ],
            options={
                'verbose_name': 'Favicon',
                'verbose_name_plural': 'Favicons',
            },
        ),
        migrations.CreateModel(
            name='FeaturedNavigationBar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('default_header', models.TextField(blank=True, default='IntelleX', help_text="Only set if occupying 1'st position", null=True, verbose_name='Heading')),
                ('text', models.TextField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='', verbose_name='Navigational image')),
                ('image_width', models.PositiveIntegerField(blank=True, default=100, help_text='Width of the image (in percent relative).', null=True, verbose_name='image width')),
                ('image_length', models.PositiveIntegerField(blank=True, default=100, help_text='Length of the image (in percent relative).', null=True, verbose_name='image length')),
                ('url', models.TextField(blank=True, null=True)),
                ('position', models.IntegerField()),
                ('opennew', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False, verbose_name='Open In New Tab?')),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
            ],
            options={
                'verbose_name': 'Featured Navigation Bar',
                'verbose_name_plural': 'Featured Navigation Bar',
            },
        ),
        migrations.CreateModel(
            name='FeedbackBackgroundImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('cover', models.ImageField(upload_to='images/')),
            ],
            options={
                'verbose_name': 'Feedback Background Image',
                'verbose_name_plural': 'Feedback Background Images',
            },
        ),
        migrations.CreateModel(
            name='FileBase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file_field', models.FileField(blank=True, null=True, upload_to='', verbose_name='File Field')),
            ],
        ),
        migrations.CreateModel(
            name='FrequentlyAskedQuestions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.TextField()),
                ('position', models.IntegerField(default=1, help_text='Positioning of the image within the carousel.', verbose_name='position')),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
            ],
            options={
                'verbose_name': 'Frequently-Asked Question',
                'verbose_name_plural': 'Frequently-Asked Questions',
            },
        ),
        migrations.CreateModel(
            name='HyperlinkBase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('display_text', models.TextField(blank=True, help_text='Display text', null=True, verbose_name='Text Display')),
                ('display_image', models.ImageField(blank=True, help_text='Display an image', null=True, upload_to='images/', verbose_name='Image Display')),
                ('hyperlink', models.TextField(verbose_name='Hyperlink')),
                ('section', models.IntegerField(verbose_name='Page Section')),
                ('page', models.TextField(verbose_name='Page Name')),
                ('alternate', models.TextField(blank=True, help_text='Alternate text for Display Image', null=True, verbose_name='Alternate Text')),
                ('image_length', models.PositiveIntegerField(blank=True, default=100, help_text='Original length of the advertisement (use for original ratio).', null=True, verbose_name='image length')),
                ('image_width', models.PositiveIntegerField(blank=True, default=100, help_text='Original width of the advertisement (use for original ratio).', null=True, verbose_name='image width')),
                ('length_for_resize', models.PositiveIntegerField(default=100, verbose_name='Resized Length')),
                ('width_for_resize', models.PositiveIntegerField(default=100, verbose_name='Resized Width')),
                ('hyperlink_type', models.IntegerField(blank=True, choices=[(4, 'Home Hyperlink'), (3, 'Member Hyperlink'), (2, 'Administration Hyperlink'), (2, 'Form Hyperlink'), (1, 'Store Hyperlink'), (0, 'Other')], default=4, help_text='Pick the type of hyperlink (optional)', null=True, verbose_name='Hyperlink Type')),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
            ],
            options={
                'verbose_name': 'Hyperlink Base',
                'verbose_name_plural': 'Hyperlink Base',
            },
        ),
        migrations.CreateModel(
            name='Idea',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Your name goes here.', max_length=100)),
                ('category', models.CharField(help_text='Choose a category you want your idea to affect (server layout, event idea, etc).', max_length=100)),
                ('profile_number', models.PositiveIntegerField(default=0, editable=False)),
                ('description', models.TextField(help_text='Please share any ideas you may have.')),
                ('image', models.ImageField(help_text='Attach an image for your idea (scales to your picture`s dimensions).', upload_to='')),
                ('image_length', models.PositiveIntegerField(blank=True, default=100, help_text='Original length of the advertisement (use for original ratio).', null=True, verbose_name='image length')),
                ('image_width', models.PositiveIntegerField(blank=True, default=100, help_text='Original width of the advertisement (use for original ratio).', null=True, verbose_name='image width')),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Idea',
                'verbose_name_plural': 'Ideas',
            },
        ),
        migrations.CreateModel(
            name='InformationBackgroundImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('cover', models.ImageField(upload_to='images/')),
            ],
            options={
                'verbose_name': 'Information Background Image',
                'verbose_name_plural': 'Information Background Images',
            },
        ),
        migrations.CreateModel(
            name='IssueBackgroundImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('cover', models.ImageField(upload_to='images/')),
            ],
            options={
                'verbose_name': 'Issue Background Image',
                'verbose_name_plural': 'Issue Background Images',
            },
        ),
        migrations.CreateModel(
            name='Item',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=100)),
                ('price', models.FloatField()),
                ('discount_price', models.FloatField(blank=True, null=True)),
                ('category', models.CharField(choices=[('G', 'Gold'), ('P', 'Platinum'), ('E', 'Emerald'), ('D', 'Diamond')], max_length=2)),
                ('specialty', models.CharField(blank=True, choices=[('F', 'Featured'), ('P', 'Popular'), ('PR', 'Premium'), ('LE', 'Limited Edition')], max_length=2, null=True)),
                ('label', models.CharField(choices=[('N', 'New'), ('BS', 'Best Seller'), ('BV', 'Best Value')], max_length=1000)),
                ('slug', models.SlugField()),
                ('description', models.TextField()),
                ('image', models.ImageField(upload_to='')),
                ('image_length', models.PositiveIntegerField(blank=True, default=100, help_text='Original length of the advertisement (use for original ratio).', null=True, verbose_name='image length')),
                ('image_width', models.PositiveIntegerField(blank=True, default=100, help_text='Original width of the advertisement (use for original ratio).', null=True, verbose_name='image width')),
                ('length_for_resize', models.PositiveIntegerField(default=100, verbose_name='Resized Length')),
                ('width_for_resize', models.PositiveIntegerField(default=100, verbose_name='Resized Width')),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Out of stock?')),
                ('relateditems', models.ManyToManyField(blank=True, to='showcase.item', verbose_name='Related Items:')),
            ],
        ),
        migrations.CreateModel(
            name='LogoBase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(verbose_name='Background Title')),
                ('logocover', models.ImageField(upload_to='images/', verbose_name='Logo')),
                ('hyperlink', models.TextField(verbose_name='Hyperlink')),
                ('section', models.IntegerField(default=1, verbose_name='Page Section')),
                ('page', models.TextField(verbose_name='Page Name')),
                ('alternate', models.TextField(verbose_name='Alternate Text')),
                ('logo_length', models.PositiveIntegerField(blank=True, default='100', help_text='Original length of the advertisement (use for original ratio).', null=True, verbose_name='logo length')),
                ('logo_width', models.PositiveIntegerField(blank=True, default='100', help_text='Original width of the advertisement (use for original ratio).', null=True, verbose_name='logo width')),
                ('length_for_resize', models.PositiveIntegerField(default=100, verbose_name='Resized Length')),
                ('width_for_resize', models.PositiveIntegerField(default=100, verbose_name='Resized Width')),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
            ],
            options={
                'verbose_name': 'Logo',
                'verbose_name_plural': 'Logos',
            },
        ),
        migrations.CreateModel(
            name='MantenienceBackgroundImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('cover', models.ImageField(upload_to='images/')),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
            ],
            options={
                'verbose_name': 'Mantenience Background Image',
                'verbose_name_plural': 'Mantenience Background Images',
            },
        ),
        migrations.CreateModel(
            name='MegaBackgroundImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('cover', models.ImageField(upload_to='images/')),
            ],
            options={
                'verbose_name': 'Mega Background Image',
                'verbose_name_plural': 'Mega Background Images',
            },
        ),
        migrations.CreateModel(
            name='MemberHomeBackgroundImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('cover', models.ImageField(upload_to='images/')),
            ],
            options={
                'verbose_name': 'Member Home Background Image',
                'verbose_name_plural': 'Member Home Background Images',
            },
        ),
        migrations.CreateModel(
            name='NavBar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('url', models.TextField(blank=True, null=True)),
                ('row', models.IntegerField()),
                ('position', models.IntegerField()),
                ('opennew', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False, verbose_name='Open In New Tab?')),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
            ],
            options={
                'verbose_name': 'Navigational Bar Dropdown',
                'verbose_name_plural': 'Navigational Bar Dropdowns',
            },
        ),
        migrations.CreateModel(
            name='NavBarHeader',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(help_text='This is a header.')),
                ('section', models.TextField(blank=True, help_text='ID Section of page.', max_length=200, null=True)),
                ('row', models.IntegerField()),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
            ],
            options={
                'verbose_name': 'Navigational Bar Header',
                'verbose_name_plural': 'Navigational Bar Headers',
            },
        ),
        migrations.CreateModel(
            name='NewsBackgroundImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('cover', models.ImageField(upload_to='images/')),
            ],
            options={
                'verbose_name': 'News Background Image',
                'verbose_name_plural': 'News Background Images',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ref_code', models.CharField(blank=True, max_length=20, null=True)),
                ('feedback_url', models.URLField(blank=True)),
                ('start_date', models.DateTimeField(auto_now_add=True)),
                ('ordered_date', models.DateTimeField()),
                ('ordered', models.BooleanField(default=False)),
                ('being_delivered', models.BooleanField(default=False)),
                ('received', models.BooleanField(default=False)),
                ('refund_requested', models.BooleanField(default=False)),
                ('refund_granted', models.BooleanField(default=False)),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Is this an active order?')),
                ('billing_address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='billing_address', to='showcase.address')),
                ('coupon', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='showcase.coupon')),
                ('itemhistory', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='showcase.item', verbose_name='Order history')),
            ],
        ),
        migrations.CreateModel(
            name='OrderBackgroundImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('cover', models.ImageField(upload_to='images/')),
            ],
            options={
                'verbose_name': 'Order Background Image',
                'verbose_name_plural': 'Order Background Images',
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('ordered', models.BooleanField(default=False)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('slug', models.SlugField(blank=True, help_text='Leave blank to use corresponding product slug.', max_length=200, null=True)),
                ('image', models.ImageField(upload_to='')),
                ('image_length', models.PositiveIntegerField(blank=True, default=100, help_text='Original length of the advertisement (use for original ratio).', null=True, verbose_name='image length')),
                ('image_width', models.PositiveIntegerField(blank=True, default=100, help_text='Original width of the advertisement (use for original ratio).', null=True, verbose_name='image width')),
                ('quantity', models.IntegerField(default=1)),
                ('order_date', models.DateTimeField(auto_now_add=True, verbose_name='Order date')),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='showcase.item')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Order Items',
            },
        ),
        migrations.CreateModel(
            name='PartnerBackgroundImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('cover', models.ImageField(upload_to='images/')),
            ],
            options={
                'verbose_name': 'Partner Background Image',
                'verbose_name_plural': 'Partner Background Images',
            },
        ),
        migrations.CreateModel(
            name='Patreon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('patreon_username', models.CharField(help_text='The patreon`s username goes here.', max_length=100, verbose_name='Patreon`s Username')),
                ('description', models.TextField(help_text='Description of Patreon`s patreonage.')),
                ('image', models.ImageField(help_text='The patreon`s avatar goes here.', upload_to='')),
            ],
            options={
                'verbose_name': 'Patreon',
                'verbose_name_plural': 'Patreons',
            },
        ),
        migrations.CreateModel(
            name='PatreonBackgroundImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('cover', models.ImageField(upload_to='images/')),
            ],
            options={
                'verbose_name': 'Patreon Background Image',
                'verbose_name_plural': 'Patreon Background Images',
            },
        ),
        migrations.CreateModel(
            name='PerksBackgroundImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('cover', models.ImageField(upload_to='images/')),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
            ],
            options={
                'verbose_name': 'Perks Background Image',
                'verbose_name_plural': 'Perks Background Images',
            },
        ),
        migrations.CreateModel(
            name='PollQuestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.CharField(max_length=200, verbose_name='Question')),
                ('pub_date', models.DateTimeField(auto_now_add=True, verbose_name='date published')),
            ],
            options={
                'verbose_name': 'Poll Question',
                'verbose_name_plural': 'Poll Questions',
            },
        ),
        migrations.CreateModel(
            name='PostBackgroundImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('cover', models.ImageField(upload_to='images/')),
            ],
            options={
                'verbose_name': 'Idea Background Image',
                'verbose_name_plural': 'Idea Background Images',
            },
        ),
        migrations.CreateModel(
            name='PosteBackgroundImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('cover', models.ImageField(upload_to='images/')),
            ],
            options={
                'verbose_name': 'Idea Background Image',
                'verbose_name_plural': 'Idea Background Images',
            },
        ),
        migrations.CreateModel(
            name='PriceBackgroundImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('cover', models.ImageField(upload_to='images/')),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
            ],
            options={
                'verbose_name': 'Price Background Image',
                'verbose_name_plural': 'Price Background Images',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
                ('description', models.TextField()),
                ('mfg_date', models.DateTimeField(auto_now_add=True)),
                ('rating', models.CharField(choices=[('b', 'Bad'), ('a', 'Average'), ('e', 'Excellent')], max_length=1)),
            ],
        ),
        migrations.CreateModel(
            name='ProductBackgroundImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('cover', models.ImageField(upload_to='images/')),
            ],
            options={
                'verbose_name': 'Product Background Image',
                'verbose_name_plural': 'Product Background Images',
            },
        ),
        migrations.CreateModel(
            name='PunishAppsBackgroundImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('cover', models.ImageField(upload_to='images/')),
            ],
            options={
                'verbose_name': 'Punishment Applications Background Image',
                'verbose_name_plural': 'Punishment Applications Background Images',
            },
        ),
        migrations.CreateModel(
            name='PunishmentAppeal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Your name and tag go here.', max_length=100)),
                ('Rule_broken', models.CharField(help_text='Tell us the numbers of the rule(s) you broke. Refer to our rules page to see the rules and their corresponding numbers.', max_length=200, verbose_name='rule broken')),
                ('Why_I_should_have_my_punishment_revoked', models.TextField(help_text='Tell us why we should revoke your punishment, and what you can do to fix your mistake. If you think your punishment is a mistake, tell us why.', verbose_name='Why I should have my punishment revoked')),
                ('Additional_comments', models.TextField(help_text='Put any additional evidence or comments you may have here.', verbose_name='additional comments')),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
            ],
            options={
                'verbose_name': 'Punishment Appeal',
                'verbose_name_plural': 'Punishment Appeals',
            },
        ),
        migrations.CreateModel(
            name='ReasonsBackgroundImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('cover', models.ImageField(upload_to='images/')),
            ],
            options={
                'verbose_name': 'Reasons Background Image',
                'verbose_name_plural': 'Reasons Background Images',
            },
        ),
        migrations.CreateModel(
            name='RuleBackgroundImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('cover', models.ImageField(upload_to='images/')),
            ],
            options={
                'verbose_name': 'Rule Background Image',
                'verbose_name_plural': 'Rule Background Images',
            },
        ),
        migrations.CreateModel(
            name='ServerBackgroundImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('cover', models.ImageField(upload_to='images/')),
            ],
            options={
                'verbose_name': 'Server Background Image',
                'verbose_name_plural': 'Server Background Images',
            },
        ),
        migrations.CreateModel(
            name='SettingsBackgroundImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('cover', models.ImageField(upload_to='images/')),
            ],
            options={
                'verbose_name': 'Settings Background Image',
                'verbose_name_plural': 'Settings Background Images',
            },
        ),
        migrations.CreateModel(
            name='ShareBackgroundImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('cover', models.ImageField(upload_to='images/')),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
            ],
            options={
                'verbose_name': 'Share Background Image',
                'verbose_name_plural': 'Share Background Images',
            },
        ),
        migrations.CreateModel(
            name='ShowcaseBackgroundImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('cover', models.ImageField(upload_to='images/')),
            ],
            options={
                'verbose_name': 'Showcase Background Image',
                'verbose_name_plural': 'Showcase Background Images',
            },
        ),
        migrations.CreateModel(
            name='SignupBackgroundImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('cover', models.ImageField(upload_to='images/')),
            ],
            options={
                'verbose_name': 'Signup Background Image',
                'verbose_name_plural': 'SignupBackground Images',
            },
        ),
        migrations.CreateModel(
            name='SocialMedia',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('social', models.TextField(verbose_name='Social Media Platform')),
                ('image', models.ImageField(upload_to='', verbose_name='Social Media Logo')),
                ('image_width', models.PositiveIntegerField(blank=True, default=100, help_text='Width of the image (in percent relative).', null=True, verbose_name='image width')),
                ('image_length', models.PositiveIntegerField(blank=True, default=100, help_text='Length of the image (in percent relative).', null=True, verbose_name='image length')),
                ('width_for_resize', models.PositiveIntegerField(default=100, verbose_name='Resize Width')),
                ('height_for_resize', models.PositiveIntegerField(default=100, verbose_name='Resize Height')),
                ('image_position', models.IntegerField(help_text='Positioning of the image.', verbose_name='Position')),
                ('alternate', models.TextField(verbose_name='Alternate Text')),
                ('page', models.TextField(verbose_name='Page Name')),
                ('hyperlink', models.URLField(verbose_name='Hyperlink')),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
            ],
            options={
                'verbose_name': 'Social Media',
                'verbose_name_plural': 'Social Media',
            },
        ),
        migrations.CreateModel(
            name='StaffApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Your name & tag go here.', max_length=100)),
                ('overall_time_check', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False, verbose_name='I have been in MC for at least 2 months')),
                ('previous_role_time_check', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False, verbose_name='I have been in MC for at least 1 month')),
                ('meeting_attendance_check', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False, verbose_name='I can attend at least half of the staff meetings.')),
                ('strikes_check', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False, verbose_name='I have no strikes on my account currently')),
                ('role', models.TextField(help_text='What role are you applying for?', verbose_name='Roles')),
                ('resume', models.FileField(help_text='Your Resume', upload_to='', verbose_name='Resume')),
                ('why', models.TextField(help_text='Tell us why you want to be a MegaClan Staff Member. Be descriptive.', verbose_name='Why do you want to apply for staff?')),
                ('how_better', models.TextField(help_text='Tell us what you will do to make MC better as a staff member.', verbose_name='How do you think you can make MC better?')),
                ('read_requirements', models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False, verbose_name='I confirm that I have read all the staff requirements and meet all of them.')),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
            ],
            options={
                'verbose_name': 'Staff Application',
                'verbose_name_plural': 'Staff Applications',
            },
        ),
        migrations.CreateModel(
            name='StaffApplyBackgroundImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('cover', models.ImageField(upload_to='images/')),
            ],
            options={
                'verbose_name': 'Staff Application Background Image',
                'verbose_name_plural': 'Staff Application Background Images',
            },
        ),
        migrations.CreateModel(
            name='StaffBackgroundImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('cover', models.ImageField(upload_to='images/')),
            ],
            options={
                'verbose_name': 'Staff Background Image',
                'verbose_name_plural': 'Staff Background Images',
            },
        ),
        migrations.CreateModel(
            name='StaffRanksBackgroundImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('cover', models.ImageField(upload_to='images/')),
            ],
            options={
                'verbose_name': 'Staff Ranks Background Image',
                'verbose_name_plural': 'Staff Ranks Background Images',
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
                ('created_on', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_on', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
            ],
            options={
                'verbose_name': 'Website',
                'db_table': 'state',
            },
        ),
        migrations.CreateModel(
            name='SupportBackgroundImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('cover', models.ImageField(upload_to='images/')),
            ],
            options={
                'verbose_name': 'Support Background Image',
                'verbose_name_plural': 'Support Background Images',
            },
        ),
        migrations.CreateModel(
            name='SupportChatBackgroundImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('cover', models.ImageField(upload_to='images/')),
            ],
            options={
                'verbose_name': 'Support Chat Background Image',
                'verbose_name_plural': 'Support Chat Background Images',
            },
        ),
        migrations.CreateModel(
            name='TagBackgroundImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('cover', models.ImageField(upload_to='images/')),
            ],
            options={
                'verbose_name': 'Tag Background Image',
                'verbose_name_plural': 'Tag Background Images',
            },
        ),
        migrations.CreateModel(
            name='TextBase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(verbose_name='Text')),
                ('page', models.TextField(verbose_name='Page Name')),
                ('url', models.URLField(verbose_name='Page URL')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('text_color', models.CharField(blank=True, default='white', help_text='Color of the text (accepts color names, hex codes or RGBA values in format (R, G, B, A))', max_length=200, null=True, verbose_name='Text Color')),
                ('header_or_textfield', models.BooleanField(choices=[(1, 'Header'), (0, 'Body')], default=1, verbose_name='Header or Body Text')),
                ('section', models.IntegerField(default='1', help_text='Section Number of Text', verbose_name='Text Section')),
                ('exists', models.BooleanField(choices=[(1, 'Yes'), (0, 'No')], default=1, help_text='Is this section taken?', verbose_name='Section Taken')),
                ('hyperlink', models.TextField(blank=True, null=True, verbose_name='Hyperlink')),
                ('text_size', models.IntegerField(choices=[(6, 'H6'), (5, 'H5'), (4, 'H4'), (3, 'H3'), (2, 'H2'), (1, 'H1'), (0, 'p')], default=0, help_text='6->Body 3, 5->Body 2, 4->Body 1, 3-> Heading 3,2-> Heading 2, 1-> Heading 1,', verbose_name='Text Size')),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
            ],
            options={
                'verbose_name': 'Text Base',
                'verbose_name_plural': 'Text Base',
            },
        ),
        migrations.CreateModel(
            name='TiersBackgroundImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('cover', models.ImageField(upload_to='images/')),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
            ],
            options={
                'verbose_name': 'Tiers Background Image',
                'verbose_name_plural': 'Tiers Background Images',
            },
        ),
        migrations.CreateModel(
            name='Titled',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('overtitle', models.TextField(verbose_name='Title')),
                ('page', models.TextField(blank=True, null=True, verbose_name='Page Name')),
                ('url', models.URLField(verbose_name='Page URL')),
                ('position', models.IntegerField(default=1)),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
            ],
            options={
                'verbose_name': 'Page Title',
                'verbose_name_plural': 'Page Titles',
            },
        ),
        migrations.CreateModel(
            name='UserBackgroundImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('cover', models.ImageField(upload_to='images/')),
            ],
            options={
                'verbose_name': 'User Background Image',
                'verbose_name_plural': 'Users Background Images',
            },
        ),
        migrations.CreateModel(
            name='VoteBackgroundImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('cover', models.ImageField(upload_to='images/')),
            ],
            options={
                'verbose_name': 'Vote Background Image',
                'verbose_name_plural': 'Vote Background Images',
            },
        ),
        migrations.CreateModel(
            name='WebsiteBackgroundImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('cover', models.ImageField(upload_to='images/')),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
            ],
            options={
                'verbose_name': 'Website Background Image',
                'verbose_name_plural': 'Website Background Images',
            },
        ),
        migrations.CreateModel(
            name='WhyBackgroundImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('cover', models.ImageField(upload_to='images/')),
            ],
            options={
                'verbose_name': 'Why Background Image',
                'verbose_name_plural': 'Why Background Images',
            },
        ),
        migrations.CreateModel(
            name='Advertising',
            fields=[
                ('advertisementbase_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='showcase.advertisementbase')),
            ],
            bases=('showcase.advertisementbase',),
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Your name goes here.', max_length=100)),
                ('description', models.TextField()),
                ('category', models.CharField(help_text='Type the category that you are voting on (server layout, event idea, administration position, etc).', max_length=100)),
                ('mfg_date', models.DateTimeField(auto_now_add=True, verbose_name='date')),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Vote',
                'verbose_name_plural': 'Votes',
            },
        ),
        migrations.CreateModel(
            name='UserProfile2',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(default='', max_length=100)),
                ('last_name', models.CharField(default='', max_length=100)),
                ('description', models.CharField(default='', max_length=100)),
                ('city', models.CharField(default='', max_length=100)),
                ('country', models.CharField(default='', max_length=100)),
                ('phone', models.IntegerField(default=0)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_image')),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Edit Profile',
                'verbose_name_plural': 'Edit Profiles',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stripe_customer_id', models.CharField(blank=True, max_length=50, null=True)),
                ('one_click_purchasing', models.BooleanField(default=False)),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Profile',
                'verbose_name_plural': 'User Profiles',
            },
        ),
        migrations.CreateModel(
            name='UpdateProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Your name goes here.', max_length=100)),
                ('description', models.TextField(help_text='Your profile description goes here.')),
                ('profile_number', models.PositiveIntegerField(default=0, editable=False)),
                ('image', models.ImageField(help_text='Attach an image for your profile (scales to your picture`s dimensions.)', upload_to='')),
                ('image_length', models.PositiveIntegerField(blank=True, default=100, help_text='Original length of the advertisement (use for original ratio).', null=True, verbose_name='image length')),
                ('image_width', models.PositiveIntegerField(blank=True, default=100, help_text='Original width of the advertisement (use for original ratio).', null=True, verbose_name='image width')),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'User Profile Post',
                'verbose_name_plural': 'User Profile Posts',
            },
        ),
        migrations.CreateModel(
            name='SupportMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=1000000)),
                ('date', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('user', models.CharField(max_length=1000000)),
                ('room', models.CharField(max_length=1000000)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='profile_image')),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('image_length', models.PositiveIntegerField(blank=True, default=100, help_text='Original length of the advertisement (use for original ratio).', null=True, verbose_name='image length')),
                ('image_width', models.PositiveIntegerField(blank=True, default=100, help_text='Original width of the advertisement (use for original ratio).', null=True, verbose_name='image width')),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
                ('signed_in_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='support_messages', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Support Message',
                'verbose_name_plural': 'Support Messages',
            },
        ),
        migrations.CreateModel(
            name='SupportLine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=1000000)),
                ('date', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('room', models.CharField(max_length=1000000)),
                ('message_number', models.PositiveIntegerField(default=0, editable=False)),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('image_length', models.PositiveIntegerField(blank=True, default=100, help_text='Original length of the advertisement (use for original ratio).', null=True, verbose_name='image length')),
                ('image_width', models.PositiveIntegerField(blank=True, default=100, help_text='Original width of the advertisement (use for original ratio).', null=True, verbose_name='image width')),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
                ('signed_in_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='supportlinemessages', to=settings.AUTH_USER_MODEL, verbose_name='User')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Administration Thread Message',
                'verbose_name_plural': 'Administration Thread Messages',
            },
        ),
        migrations.CreateModel(
            name='SupportInterface',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000, null=True)),
                ('date', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
                ('room', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='supportinterfaceroom', to=settings.AUTH_USER_MODEL, verbose_name='Room Creator')),
            ],
            options={
                'verbose_name': 'Administration Chat Thread',
                'verbose_name_plural': 'Administration Chat Thread',
            },
        ),
        migrations.CreateModel(
            name='SupportChat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
                ('signed_in_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Support Chat',
                'verbose_name_plural': 'Support Chat',
            },
        ),
        migrations.CreateModel(
            name='Support',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Your name and tag go here.', max_length=100)),
                ('category', models.CharField(help_text='Please let us know what type of issue you are dealing with.', max_length=200)),
                ('issue', models.TextField(help_text='Describe your issue in detail. We will try to get back to you as soon as possible.')),
                ('Additional_comments', models.TextField(help_text='Put any additional comments you may have here.', verbose_name='additional comments')),
                ('image', models.ImageField(blank=True, help_text='Please attach a screenshot of your issue.', null=True, upload_to='')),
                ('image_length', models.PositiveIntegerField(blank=True, default=100, help_text='Original length of the advertisement (use for original ratio).', null=True, verbose_name='image length')),
                ('image_width', models.PositiveIntegerField(blank=True, default=100, help_text='Original width of the advertisement (use for original ratio).', null=True, verbose_name='image width')),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Customer Support',
                'verbose_name_plural': 'Customer Support',
            },
        ),
        migrations.CreateModel(
            name='StaffProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Your name and tag go here. If you wish to stay anonymous, put "Anonymous".', max_length=100)),
                ('position', models.CharField(help_text='Please let us know what staff position you serve currently.', max_length=200)),
                ('description', models.TextField(help_text='Write whatever you want on your profile here (within regulations).')),
                ('staff_feats', models.TextField(help_text='Let us know of your transcendental feats of making MegaClan a better place.', verbose_name='staff feats')),
                ('image', models.ImageField(help_text='Please provide a cover image for your profile.', upload_to='')),
                ('image_length', models.PositiveIntegerField(blank=True, default=100, help_text='Original length of the advertisement (use for original ratio).', null=True, verbose_name='image length')),
                ('image_width', models.PositiveIntegerField(blank=True, default=100, help_text='Original width of the advertisement (use for original ratio).', null=True, verbose_name='image width')),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Staff Profile',
                'verbose_name_plural': 'Staff Profiles',
            },
        ),
        migrations.CreateModel(
            name='SettingsModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(help_text='Your username', max_length=200)),
                ('password', models.CharField(help_text='Your password', max_length=200)),
                ('email', models.EmailField(blank=True, help_text='Your password', max_length=200, null=True)),
                ('coupons', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=True, null=True, verbose_name='Send me coupons')),
                ('news', models.BooleanField(blank=True, choices=[(True, 'Yes'), (False, 'No')], default=True, null=True, verbose_name='Keep me in the loop')),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='settings', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Setting',
                'verbose_name_plural': 'Settings',
            },
        ),
        migrations.CreateModel(
            name='SearchResult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('object_id', models.PositiveIntegerField()),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField()),
                ('url', models.URLField()),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
        ),
        migrations.CreateModel(
            name='Room',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=1000)),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
                ('signed_in_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='room', to=settings.AUTH_USER_MODEL, verbose_name='Room Creator')),
            ],
        ),
        migrations.CreateModel(
            name='ReportIssue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Your name and tag go here. If you wish to stay anonymous, put "Anonymous".', max_length=100)),
                ('category', models.CharField(help_text='Please let us know what type of issue this is.', max_length=200)),
                ('issue', models.TextField(help_text='Describe the issue in detail. We will try to get to it as soon as possible.')),
                ('Additional_comments', models.TextField(help_text='Put any additional comments you may have here.', verbose_name='additional comments')),
                ('image', models.ImageField(help_text='Please put a screenshot of the issue.', upload_to='')),
                ('image_length', models.PositiveIntegerField(blank=True, default=100, help_text='Original length of the advertisement (use for original ratio).', null=True, verbose_name='image length')),
                ('image_width', models.PositiveIntegerField(blank=True, default=100, help_text='Original width of the advertisement (use for original ratio).', null=True, verbose_name='image width')),
                ('anonymous', models.BooleanField(default=False, help_text='Report issue anonymously?')),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Report Issue',
                'verbose_name_plural': 'Report Issues',
            },
        ),
        migrations.CreateModel(
            name='Refund',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.TextField()),
                ('accepted', models.BooleanField(default=False)),
                ('email', models.EmailField(max_length=254)),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Is this an active refund?')),
                ('order', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='showcase.order')),
            ],
        ),
        migrations.CreateModel(
            name='Questionaire',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('form_name', models.TextField(verbose_name='Form Name')),
                ('form_type', models.CharField(choices=[('option1', 'Multiple Choice'), ('option2', 'Short Answer'), ('option3', 'True or False'), ('option4', 'Free Response'), ('option5', 'Image Field'), ('option6', 'Integer Field'), ('option7', 'Decimal Field'), ('option8', 'Other')], max_length=10)),
                ('text', models.TextField(verbose_name='Question')),
                ('image', models.TextField(blank=True, null=True, verbose_name='Image')),
                ('answer_choices', models.CharField(blank=True, max_length=255, null=True)),
                ('correct_answer_multiple_choice', models.CharField(blank=True, max_length=255, null=True)),
                ('correct_answer_short_answer', models.CharField(blank=True, max_length=255, null=True)),
                ('correct_answer_true_false', models.BooleanField(blank=True, null=True)),
                ('correct_answer_free_response', models.TextField(blank=True, null=True)),
                ('correct_answer_image_field', models.ImageField(blank=True, null=True, upload_to='correct_answers/')),
                ('correct_answer_integer_field', models.IntegerField(blank=True, null=True)),
                ('correct_answer_decimal_field', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('correct_answer_infinite_decimal_field', models.FloatField(blank=True, null=True)),
                ('correct_answer_other', models.CharField(blank=True, max_length=255, null=True)),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Is this an active order?')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Question Form Base',
            },
        ),
        migrations.CreateModel(
            name='ProfileDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('avatar', models.ImageField(blank=True, null=True, upload_to='profile_image', verbose_name='Profile picture')),
                ('alternate', models.TextField(verbose_name='Alternate text')),
                ('about_me', models.TextField(blank=True, null=True)),
                ('position', models.UUIDField(default=uuid.uuid4, editable=False, help_text='Position for sorting', unique=True)),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Account Profile',
                'verbose_name_plural': 'Account Profiles',
            },
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('about_me', models.TextField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='profile_image')),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PostLikes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='showcase.idea')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Post Like',
                'verbose_name_plural': 'Post Likes',
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('stripe_charge_id', models.CharField(max_length=50)),
                ('amount', models.FloatField()),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PartnerApplication',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Your server name goes here.', max_length=100)),
                ('category', models.CharField(help_text='Pick a category you feel your server represents (gaming, community, etc).', max_length=100)),
                ('description', models.TextField(help_text='Describe your server. Tell potential members why they should join.')),
                ('server_invite', models.URLField(help_text='Idea your server invite link here.')),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Partner Application',
                'verbose_name_plural': 'Partner Applications',
            },
        ),
        migrations.CreateModel(
            name='Partner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Your username goes here.', max_length=100)),
                ('category', models.CharField(help_text='Pick a category you feel your server represents (gaming, community, etc).', max_length=100)),
                ('description', models.TextField(help_text='Describe your server. Tell potential members why they should join.')),
                ('server_invite', models.URLField(help_text='Post your server invite link here.')),
                ('anonymous', models.BooleanField(default=False, help_text='Remain anonymous? (not recommended)')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OrderItemField',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ordered', models.BooleanField(default=False)),
                ('slug', models.SlugField(blank=True, help_text='Leave blank to use corresponding product slug.', max_length=200, null=True)),
                ('image', models.ImageField(upload_to='')),
                ('image_length', models.PositiveIntegerField(blank=True, default=100, help_text='Original length of the advertisement (use for original ratio).', null=True, verbose_name='image length')),
                ('image_width', models.PositiveIntegerField(blank=True, default=100, help_text='Original width of the advertisement (use for original ratio).', null=True, verbose_name='image width')),
                ('quantity', models.IntegerField(default=1)),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='showcase.item')),
                ('orderitem_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='showcase.orderitem', verbose_name='Order item id')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Order Item Fields',
            },
        ),
        migrations.AddField(
            model_name='order',
            name='items',
            field=models.ManyToManyField(to='showcase.orderitem'),
        ),
        migrations.AddField(
            model_name='order',
            name='payment',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='showcase.payment'),
        ),
        migrations.AddField(
            model_name='order',
            name='shipping_address',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='shipping_address', to='showcase.address'),
        ),
        migrations.AddField(
            model_name='order',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.CreateModel(
            name='NewsFeed',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Your name and tag go here. If you wish to stay anonymous, put "Anonymous".', max_length=100)),
                ('title', models.TextField(help_text='Write the news headline here.', verbose_name='News Headline')),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('category', models.CharField(help_text='Please let us know what form of news this is.', max_length=200)),
                ('description', models.TextField(help_text='Write the news here.')),
                ('image', models.ImageField(help_text='Please provide a cover image for the news.', upload_to='')),
                ('image_length', models.PositiveIntegerField(blank=True, default=100, help_text='Original length of the advertisement (use for original ratio).', null=True, verbose_name='image length')),
                ('image_width', models.PositiveIntegerField(blank=True, default=100, help_text='Original width of the advertisement (use for original ratio).', null=True, verbose_name='image width')),
                ('date_and_time', models.DateTimeField(null=True, verbose_name='time and date')),
                ('position', models.IntegerField(default=1, verbose_name='Image Position')),
                ('anonymous', models.BooleanField(default=False, help_text='Remain anonymous? (not recommended)')),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'News Feed',
                'verbose_name_plural': 'News Feed',
            },
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=1000000)),
                ('date', models.DateTimeField(blank=True, default=django.utils.timezone.now)),
                ('user', models.CharField(max_length=1000000, verbose_name='Username')),
                ('room', models.CharField(max_length=1000000)),
                ('message_number', models.PositiveIntegerField(default=0, editable=False)),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('image_length', models.PositiveIntegerField(blank=True, default=100, help_text='Original length of the advertisement (use for original ratio).', null=True, verbose_name='image length')),
                ('image_width', models.PositiveIntegerField(blank=True, default=100, help_text='Original width of the advertisement (use for original ratio).', null=True, verbose_name='image width')),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
                ('signed_in_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='messages', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
        ),
        migrations.CreateModel(
            name='ImageCarousel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('carouseltitle', models.CharField(help_text='Title of the image.', max_length=100, verbose_name='title')),
                ('carouselcaption', models.TextField(help_text='Caption for the image.', verbose_name='caption')),
                ('carouselimage', models.ImageField(help_text='Upload an image for the carousel.)', upload_to='images/', verbose_name='image')),
                ('carouselimage_length', models.PositiveIntegerField(blank=True, default=100, help_text='Original length of the image (use for original ratio).', null=True, verbose_name='image length')),
                ('carouselimage_width', models.PositiveIntegerField(blank=True, default=100, help_text='Original width of the image (use for original ratio).', null=True, verbose_name='image width')),
                ('length_for_resize', models.PositiveIntegerField(default=100, verbose_name='Resized Length')),
                ('width_for_resize', models.PositiveIntegerField(default=100, verbose_name='Resized Width')),
                ('specialty', models.CharField(blank=True, choices=[('F', 'Featured'), ('P', 'Popular'), ('PR', 'Premium'), ('LE', 'Limited Edition')], max_length=2, null=True)),
                ('carouselnumber', models.IntegerField(help_text='What carousel number is this?.', verbose_name='Carousel number')),
                ('carouselposition', models.IntegerField(help_text='Positioning of the image within the carousel.', verbose_name='position')),
                ('carouseltotal', models.IntegerField(help_text='Total number of images within the carousel.', verbose_name='total images')),
                ('carouselpage', models.TextField(verbose_name='Page Name')),
                ('hyperlink', models.TextField(verbose_name='Hyperlink')),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
                ('associated_product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='showcase.item', verbose_name='Associated Product')),
            ],
            options={
                'verbose_name': 'Image Carousel Post',
                'verbose_name_plural': 'Image Carousel Posts',
            },
        ),
        migrations.CreateModel(
            name='ImageBase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='title.', max_length=100, verbose_name='title')),
                ('image', models.ImageField(blank=True, height_field='image_length', help_text='Image of the advertisement.', null=True, upload_to='images/', width_field='image_width')),
                ('image_width', models.PositiveIntegerField(blank=True, default=100, help_text='Width of the image (in percent relative).', null=True, verbose_name='image width')),
                ('image_length', models.PositiveIntegerField(blank=True, default=100, help_text='Length of the image (in percent relative).', null=True, verbose_name='image length')),
                ('image_ratio', models.FloatField(blank=True, default=1.0, help_text='Length to Width Ratio of the Image (Length/Width).', null=True, verbose_name='image ratio')),
                ('file', models.FileField(blank=True, null=True, upload_to='images/', verbose_name='Non-image File')),
                ('image_measurement', models.CharField(blank=True, choices=[('px', 'Pixels'), ('%', 'Percent'), ('vh', 'View Height'), ('em', 'em'), ('rem', 'Root em'), ('pt', 'Points'), ('pc', 'Picas')], max_length=3, null=True)),
                ('width_for_resize', models.PositiveIntegerField(default=100, verbose_name='Resize Width')),
                ('height_for_resize', models.PositiveIntegerField(default=100, verbose_name='Resize Height')),
                ('image_position', models.IntegerField(help_text='Positioning of the image.', verbose_name='Position')),
                ('alternate', models.TextField(verbose_name='Alternate Text')),
                ('page', models.TextField(verbose_name='Page Name')),
                ('xposition', models.IntegerField(default='0', help_text='x-position.', verbose_name='x-position')),
                ('yposition', models.IntegerField(default='0', help_text='x-position.', verbose_name='y-position')),
                ('relevance', models.TextField(help_text='Relevance of image')),
                ('type', models.CharField(help_text='Type of image.', max_length=200)),
                ('hyperlink', models.TextField(blank=True, null=True, verbose_name='Hyperlink')),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
                ('correlating_product', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='showcase.item')),
            ],
            options={
                'verbose_name': 'Image Base',
                'verbose_name_plural': 'Image Base',
            },
        ),
        migrations.CreateModel(
            name='Feedback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField()),
                ('feedbackpage', models.TextField(blank=True, null=True, verbose_name='Page Name')),
                ('slug', models.SlugField(help_text='Leave blank to use corresponding product slug.', max_length=200)),
                ('star_rating', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Star Rating')),
                ('showcase', models.IntegerField(blank=True, choices=[(1, 'Yes'), (0, 'No')], default=0, help_text='1->Yes, 0->No', null=True, verbose_name='Showcase on Cover Page?')),
                ('image', models.ImageField(blank=True, help_text='Please upload any product images', null=True, upload_to='images/', verbose_name='Images')),
                ('image_length', models.PositiveIntegerField(blank=True, default=100, help_text='Original length of the image (use for original ratio).', null=True, verbose_name='image length')),
                ('image_width', models.PositiveIntegerField(blank=True, default=100, help_text='Original width of the image (use for original ratio).', null=True, verbose_name='image width')),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
                ('item', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='showcase.item')),
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='showcase.orderitem')),
                ('username', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Event name goes here.', max_length=100)),
                ('category', models.CharField(help_text='Please let us know what type of event this is (tournament, stage night, etc).', max_length=200)),
                ('description', models.TextField(help_text='Give a brief description of the event.')),
                ('date', models.DateField(help_text='Event date (day, date, and month)', null=True)),
                ('time', models.TimeField(help_text='Event time (hour/minute)', null=True)),
                ('date_and_time', models.DateTimeField(null=True, verbose_name='Time and date of Event Creation')),
                ('section', models.IntegerField(verbose_name='Page Section')),
                ('page', models.TextField(verbose_name='Page Name')),
                ('slug', models.SlugField()),
                ('anonymous', models.BooleanField(default=False, help_text='Remain anonymous? (not recommended)')),
                ('image', models.ImageField(help_text='Please provide a cover image for the event.', upload_to='images/')),
                ('image_length', models.PositiveIntegerField(blank=True, default=100, help_text='Original length of the advertisement (use for original ratio).', null=True, verbose_name='image length')),
                ('image_width', models.PositiveIntegerField(blank=True, default=100, help_text='Original width of the advertisement (use for original ratio).', null=True, verbose_name='image width')),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DonorBackgroundImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('cover', models.ImageField(upload_to='images/')),
                ('donor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Donors Background Image',
                'verbose_name_plural': 'Donors Background Images',
            },
        ),
        migrations.CreateModel(
            name='Donate',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('nickname', models.CharField(blank=True, max_length=100, null=True)),
                ('anonymous', models.BooleanField(default=False, help_text='Donate anonymously?')),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
                ('donor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Donation',
                'verbose_name_plural': 'Donations',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('name', models.CharField(max_length=80)),
                ('email', models.EmailField(max_length=254)),
                ('body', models.TextField()),
                ('created_on', models.DateTimeField(auto_now_add=True)),
                ('active', models.BooleanField(default=True, verbose_name='Post comment?')),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
                ('commentator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='showcase.blog')),
            ],
            options={
                'ordering': ['created_on'],
            },
        ),
        migrations.CreateModel(
            name='Choice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('choice_text', models.CharField(max_length=200)),
                ('file', models.FileField(null=True, upload_to='', verbose_name='File')),
                ('votes', models.IntegerField(default=0)),
                ('category', models.CharField(help_text='Type the category that you are voting on (server layout, event idea, administration position, etc).', max_length=100)),
                ('mfg_date', models.DateTimeField(auto_now_add=True, verbose_name='date')),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='showcase.pollquestion')),
            ],
            options={
                'verbose_name': 'Choice',
                'verbose_name_plural': 'Choices',
            },
        ),
        migrations.CreateModel(
            name='CheckoutAddress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('street_address', models.CharField(max_length=100)),
                ('apartment_address', models.CharField(max_length=100)),
                ('country', django_countries.fields.CountryField(max_length=2)),
                ('zip', models.CharField(max_length=100)),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Is this an active address?')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Checkout Addresses',
            },
        ),
        migrations.AddField(
            model_name='blog',
            name='category',
            field=models.ForeignKey(blank=True, help_text='Optional', null=True, on_delete=django.db.models.deletion.CASCADE, to='showcase.blogheader', verbose_name='Category'),
        ),
        migrations.AddField(
            model_name='blog',
            name='dislikes',
            field=models.ManyToManyField(blank=True, related_name='post_dislikes', to=settings.AUTH_USER_MODEL, verbose_name='post dislikes'),
        ),
        migrations.AddField(
            model_name='blog',
            name='filters',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='showcase.blogfilter', verbose_name='Hashtag filters'),
        ),
        migrations.AddField(
            model_name='blog',
            name='likes',
            field=models.ManyToManyField(blank=True, to=settings.AUTH_USER_MODEL, verbose_name='post likes'),
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('multiple_choice_response', models.CharField(blank=True, max_length=100, null=True)),
                ('short_answer_response', models.TextField(blank=True, null=True)),
                ('true_or_false_response', models.BooleanField(blank=True, null=True)),
                ('free_response_response', models.TextField(blank=True, null=True)),
                ('image_field_response', models.ImageField(blank=True, null=True, upload_to='responses/')),
                ('integer_field_response', models.IntegerField(blank=True, null=True)),
                ('decimal_field_response', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('other_response', models.TextField(blank=True, null=True)),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Is this an active order?')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='showcase.questionaire')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='advertisementbase',
            name='correlating_product',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='showcase.item'),
        ),
        migrations.CreateModel(
            name='Preference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.IntegerField(help_text='1->Like, 2->Dislike')),
                ('date', models.DateTimeField(auto_now=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='blog_posts', to='showcase.blog')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Blog Like',
                'verbose_name_plural': 'Blog Likes',
                'unique_together': {('user', 'post', 'value')},
            },
        ),
    ]
