# Generated by Django 4.1.10 on 2024-12-02 06:17

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('showcase', '0015_choice_currency_alter_outcome_nonce_gamehistory'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='battleparticipant',
            options={'verbose_name': 'Battle Participant', 'verbose_name_plural': 'Battle Participants'},
        ),
        migrations.RemoveField(
            model_name='currency',
            name='position',
        ),
        migrations.RemoveField(
            model_name='currencyorder',
            name='profile',
        ),
        migrations.AddField(
            model_name='battle',
            name='creator',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='battle',
            name='status',
            field=models.CharField(choices=[('O', 'Open'), ('R', 'Running'), ('C', 'Complete')], default='O', max_length=1),
        ),
        migrations.AddField(
            model_name='battle',
            name='time',
            field=models.DateTimeField(blank=True, default=django.utils.timezone.now),
        ),
        migrations.AddField(
            model_name='earnedachievements',
            name='black_counter',
            field=models.IntegerField(blank=True, default=0, null=True),
        ),
        migrations.AddField(
            model_name='earnedachievements',
            name='category',
            field=models.CharField(blank=True, choices=[('RS', 'Rubies Spent'), ('TRE', 'Total Rubies Earned '), ('RC', 'Rubies Collected'), ('WS', 'Wheels Spun'), ('GCH', 'Green Cards Hit'), ('YCH', 'Yellow Cards Hit'), ('OCH', 'Orange Cards Hit'), ('RCH', 'Red Cards Hit'), ('BCH', 'Black Cards Hit'), ('GOCH', 'Gold Cards Hit'), ('RGCH', 'Red Gold Cards Hit'), ('BW', 'Battles Won'), ('BL', 'Battles Lost'), ('BD', 'Battles Drawn'), ('FA', 'Friends Added'), ('TCS', 'Total Community Size'), ('O', 'Other')], max_length=4, null=True),
        ),
        migrations.AddField(
            model_name='earnedachievements',
            name='earned',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='earnedachievements',
            name='gold_counter',
            field=models.IntegerField(blank=True, default=0, null=True),
        ),
        migrations.AddField(
            model_name='earnedachievements',
            name='green_counter',
            field=models.IntegerField(blank=True, default=0, null=True),
        ),
        migrations.AddField(
            model_name='earnedachievements',
            name='orange_counter',
            field=models.IntegerField(blank=True, default=0, null=True),
        ),
        migrations.AddField(
            model_name='earnedachievements',
            name='red_counter',
            field=models.IntegerField(blank=True, default=0, null=True),
        ),
        migrations.AddField(
            model_name='earnedachievements',
            name='redgold_counter',
            field=models.IntegerField(blank=True, default=0, null=True),
        ),
        migrations.AddField(
            model_name='earnedachievements',
            name='rubies_collected',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='earnedachievements',
            name='rubies_spent',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='earnedachievements',
            name='total_rubies_earned',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='earnedachievements',
            name='yellow_counter',
            field=models.IntegerField(blank=True, default=0, null=True),
        ),
        migrations.AddField(
            model_name='game',
            name='category',
            field=models.CharField(default=1, help_text='Category of choice (Pokemon, Yu-Gi-Oh, Bakugo, Magic The Gathering, etc.).', max_length=100),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='game',
            name='items',
            field=models.ManyToManyField(related_name='official_items', to='showcase.prizepool'),
        ),
        migrations.AddField(
            model_name='game',
            name='player_inventory',
            field=models.BooleanField(default=True),
        ),
        migrations.AlterField(
            model_name='administrationchangelog',
            name='object_id',
            field=models.CharField(max_length=255),
        ),
        migrations.AlterField(
            model_name='battle',
            name='battle_name',
            field=models.CharField(blank=True, max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='battle',
            name='currency',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='showcase.currency'),
        ),
        migrations.AlterField(
            model_name='choice',
            name='category',
            field=models.CharField(blank=True, help_text='Category of choice (Pokemon, Yu-Gi-Oh, Bakugo, Magic The Gathering, etc.).', max_length=100, null=True),
        ),
        migrations.AlterField(
            model_name='currency',
            name='name',
            field=models.CharField(default='Rubiaces', max_length=200),
        ),
        migrations.AlterField(
            model_name='currencyorder',
            name='billing_address',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='currency_billing_address', to='showcase.address'),
        ),
        migrations.AlterField(
            model_name='currencyorder',
            name='shipping_address',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='currency_shipping_address', to='showcase.address'),
        ),
        migrations.AlterField(
            model_name='earnedachievements',
            name='title',
            field=models.TextField(blank=True, null=True, verbose_name='Achievement Title'),
        ),
        migrations.RemoveField(
            model_name='earnedachievements',
            name='user',
        ),
        migrations.AlterField(
            model_name='order',
            name='billing_address',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='billing_address', to='showcase.address'),
        ),
        migrations.AlterField(
            model_name='order',
            name='shipping_address',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='shipping_address', to='showcase.address'),
        ),
        migrations.CreateModel(
            name='BattleGame',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('battle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='battle_games', to='showcase.battle')),
                ('game', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='game_battles', to='showcase.game')),
            ],
            options={
                'verbose_name': 'Battle Game',
                'verbose_name_plural': 'Battle Games',
                'unique_together': {('battle', 'game')},
            },
        ),
        migrations.AlterField(
            model_name='battle',
            name='chests',
            field=models.ManyToManyField(related_name='battles', through='showcase.BattleGame', to='showcase.game'),
        ),
        migrations.AddField(
            model_name='earnedachievements',
            name='user',
            field=models.ManyToManyField(related_name='earner', to=settings.AUTH_USER_MODEL),
        ),
    ]
