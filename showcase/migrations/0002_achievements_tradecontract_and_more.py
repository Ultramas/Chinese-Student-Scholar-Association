# Generated by Django 4.1.10 on 2024-08-28 03:59

import autoslug.fields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('showcase', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Achievements',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(verbose_name='Achievement Title')),
                ('description', models.TextField(verbose_name='Description')),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='title', unique=True)),
                ('value', models.IntegerField(blank=True, null=True)),
                ('rubies_spent', models.IntegerField(blank=True, null=True)),
                ('rubies_collected', models.IntegerField(blank=True, null=True)),
                ('total_rubies_earned', models.IntegerField(blank=True, null=True)),
                ('category', models.CharField(blank=True, choices=[('RS', 'Rubies Spent'), ('TRE', 'Total Rubies Earned '), ('RC', 'Rubies Collected'), ('WS', 'Wheels Spun'), ('GCH', 'Green Cards Hit'), ('YCH', 'Yellow Cards Hit'), ('OCH', 'Orange Cards Hit'), ('RCH', 'Red Cards Hit'), ('BCH', 'Black Cards Hit'), ('GOCH', 'Gold Cards Hit'), ('RGCH', 'Red Gold Cards Hit'), ('BW', 'Battles Won'), ('BL', 'Battles Lost'), ('BD', 'Battles Drawn'), ('FA', 'Friends Added'), ('TCS', 'Total Community Size'), ('O', 'Other')], max_length=4, null=True)),
                ('earned', models.BooleanField(default=False)),
                ('green_counter', models.IntegerField(blank=True, default=0, null=True)),
                ('yellow_counter', models.IntegerField(blank=True, default=0, null=True)),
                ('orange_counter', models.IntegerField(blank=True, default=0, null=True)),
                ('red_counter', models.IntegerField(blank=True, default=0, null=True)),
                ('black_counter', models.IntegerField(blank=True, default=0, null=True)),
                ('gold_counter', models.IntegerField(blank=True, default=0, null=True)),
                ('redgold_counter', models.IntegerField(blank=True, default=0, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('image_length', models.PositiveIntegerField(blank=True, default=100, help_text='Original length of the advertisement (use for original ratio).', null=True, verbose_name='image length')),
                ('image_width', models.PositiveIntegerField(blank=True, default=100, help_text='Original width of the advertisement (use for original ratio).', null=True, verbose_name='image width')),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='showcase.currency')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='showcase.gamehub')),
                ('user', models.ManyToManyField(blank=True, related_name='achiever', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Achievement',
                'verbose_name_plural': 'Achievements',
            },
        ),
        migrations.CreateModel(
            name='TradeContract',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commission', models.FloatField(default=10, help_text='(%)')),
                ('trading_contract', models.TextField()),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
            ],
            options={
                'verbose_name': 'Trade Contract',
                'verbose_name_plural': 'Trade Contracts',
            },
        ),
        migrations.AlterModelOptions(
            name='tradeshippinglabel',
            options={'verbose_name': 'Trade Shipping Label', 'verbose_name_plural': 'Trade Shipping Labels'},
        ),
        migrations.AlterModelOptions(
            name='withdraw',
            options={'verbose_name': 'Withdrawal Card', 'verbose_name_plural': 'Withdrawal Cards'},
        ),
        migrations.AlterUniqueTogether(
            name='tradeshippinglabel',
            unique_together=set(),
        ),
        migrations.AddField(
            model_name='currencyorder',
            name='profile',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='showcase.profiledetails'),
        ),
        migrations.AddField(
            model_name='item',
            name='type',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='showcase.itemfilter'),
        ),
        migrations.AddField(
            model_name='order',
            name='currencyorderprice',
            field=models.IntegerField(blank=True, null=True, verbose_name='Currency order price'),
        ),
        migrations.AddField(
            model_name='order',
            name='orderprice',
            field=models.FloatField(blank=True, null=True, verbose_name='Order price'),
        ),
        migrations.AddField(
            model_name='order',
            name='profile',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='showcase.profiledetails'),
        ),
        migrations.AddField(
            model_name='orderitem',
            name='currencyorderprice',
            field=models.IntegerField(blank=True, null=True, verbose_name='Curency order price'),
        ),
        migrations.AddField(
            model_name='orderitem',
            name='orderprice',
            field=models.FloatField(blank=True, null=True, verbose_name='Order price'),
        ),
        migrations.AddField(
            model_name='outcome',
            name='black_counter',
            field=models.IntegerField(blank=True, default=0, null=True),
        ),
        migrations.AddField(
            model_name='outcome',
            name='gold_counter',
            field=models.IntegerField(blank=True, default=0, null=True),
        ),
        migrations.AddField(
            model_name='outcome',
            name='green_counter',
            field=models.IntegerField(blank=True, default=0, null=True),
        ),
        migrations.AddField(
            model_name='outcome',
            name='orange_counter',
            field=models.IntegerField(blank=True, default=0, null=True),
        ),
        migrations.AddField(
            model_name='outcome',
            name='quick_spin',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='outcome',
            name='red_counter',
            field=models.IntegerField(blank=True, default=0, null=True),
        ),
        migrations.AddField(
            model_name='outcome',
            name='redgold_counter',
            field=models.IntegerField(blank=True, default=0, null=True),
        ),
        migrations.AddField(
            model_name='outcome',
            name='yellow_counter',
            field=models.IntegerField(blank=True, default=0, null=True),
        ),
        migrations.AddField(
            model_name='profiledetails',
            name='billing_address',
            field=models.CharField(blank=True, max_length=250, null=True),
        ),
        migrations.AddField(
            model_name='profiledetails',
            name='gold_cards_hit',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='profiledetails',
            name='green_cards_hit',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='profiledetails',
            name='orange_cards_hit',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='profiledetails',
            name='red_cards_hit',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='profiledetails',
            name='red_gold_cards_hit',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='profiledetails',
            name='shipping_address',
            field=models.CharField(blank=True, max_length=250, null=True),
        ),
        migrations.AddField(
            model_name='profiledetails',
            name='times_subtract_called',
            field=models.IntegerField(default=0),
        ),
        migrations.AddField(
            model_name='profiledetails',
            name='total_currency_amount',
            field=models.DecimalField(decimal_places=2, default=0, max_digits=10),
        ),
        migrations.AddField(
            model_name='profiledetails',
            name='total_currency_spent',
            field=models.DecimalField(decimal_places=2, default=0, max_digits=10),
        ),
        migrations.AddField(
            model_name='profiledetails',
            name='yellow_cards_hit',
            field=models.IntegerField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='tradeshippinglabel',
            name='shipping_profile',
            field=models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, to='showcase.userprofile2'),
            preserve_default=False,
        ),
        migrations.AlterField(
            model_name='currencyorder',
            name='billing_address',
            field=models.CharField(blank=True, max_length=250, null=True),
        ),
        migrations.AlterField(
            model_name='currencyorder',
            name='shipping_address',
            field=models.CharField(blank=True, max_length=250, null=True),
        ),
        migrations.AlterField(
            model_name='inventoryobject',
            name='price',
            field=models.IntegerField(default=0),
        ),
        migrations.AlterField(
            model_name='order',
            name='billing_address',
            field=models.CharField(blank=True, max_length=250, null=True),
        ),
        migrations.AlterField(
            model_name='order',
            name='itemhistory',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='showcase.item', verbose_name='Order history'),
        ),
        migrations.AlterField(
            model_name='order',
            name='shipping_address',
            field=models.CharField(blank=True, max_length=250, null=True),
        ),
        migrations.AlterField(
            model_name='profiledetails',
            name='currency_amount',
            field=models.IntegerField(default=0),
        ),
        migrations.CreateModel(
            name='WithdrawClass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number_of_cards', models.IntegerField(blank=True, null=True)),
                ('shipping_state', models.CharField(choices=[('P', 'Processing'), ('S', 'Shipped'), ('D', 'Delivered'), ('R', 'Refunded'), ('C', 'Canceled'), ('D', 'Damaged In Transit'), ('O', 'On Hold')], default='S', max_length=1)),
                ('open', models.BooleanField(default=True)),
                ('fees', models.IntegerField(blank=True, null=True)),
                ('date_and_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='time and date')),
                ('status', models.CharField(choices=[('P', 'Processing'), ('S', 'Shipped'), ('D', 'Delivered'), ('R', 'Refunded'), ('C', 'Canceled'), ('D', 'Damaged In Transit'), ('O', 'On Hold')], default='P', max_length=1)),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Is this withdraw active?')),
                ('currency', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='showcase.currency')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('withdraw', models.ManyToManyField(to='showcase.withdraw')),
            ],
        ),
        migrations.CreateModel(
            name='TradeConfirmation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('trade_confirmation', models.BooleanField(default=False, verbose_name='I confirm that I agree to these terms & conditions for the trade.')),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('trade', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tradeconfirm', to='showcase.trade')),
                ('trader', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='traderconfirm', to=settings.AUTH_USER_MODEL)),
                ('trading_contract', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contract', to='showcase.trade')),
            ],
            options={
                'verbose_name': 'Trade Confirmation',
                'verbose_name_plural': 'Trade Confirmations',
            },
        ),
        migrations.CreateModel(
            name='SpinPreference',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quick_spin', models.BooleanField(default=False)),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
                ('game', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='showcase.game')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='spinpreferer', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Spin Preference',
                'verbose_name_plural': 'Spin Preferences',
            },
        ),
        migrations.CreateModel(
            name='Hits',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('choice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='showcase.choice')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Hit',
                'verbose_name_plural': 'Hits',
            },
        ),
        migrations.CreateModel(
            name='EarnedAchievements',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField(verbose_name='Achievement Title')),
                ('slug', autoslug.fields.AutoSlugField(unique=True)),
                ('value', models.IntegerField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('image_length', models.PositiveIntegerField(blank=True, default=100, help_text='Original length of the advertisement (use for original ratio).', null=True, verbose_name='image length')),
                ('image_width', models.PositiveIntegerField(blank=True, default=100, help_text='Original width of the advertisement (use for original ratio).', null=True, verbose_name='image width')),
                ('date_and_time', models.DateTimeField(auto_now_add=True, null=True, verbose_name='date and time')),
                ('is_active', models.IntegerField(blank=True, choices=[(1, 'Active'), (0, 'Inactive')], default=1, help_text='1->Active, 0->Inactive', null=True, verbose_name='Set active?')),
                ('achievement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='showcase.achievements')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='showcase.gamehub')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='earner', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Earned Achievement',
                'verbose_name_plural': 'Earned Achievements',
            },
        ),
        migrations.CreateModel(
            name='BlogTips',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tip', models.TextField(unique=True)),
                ('updated_on', models.DateTimeField(auto_now=True, verbose_name='updated on: ')),
                ('position', models.IntegerField(blank=True, null=True)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='blog_tips', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Blog Tip',
                'verbose_name_plural': 'Blog Tips',
            },
        ),
        migrations.CreateModel(
            name='AdministrationChangeLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('create', 'Create'), ('update', 'Update'), ('delete', 'Delete')], max_length=6)),
                ('model', models.CharField(max_length=100)),
                ('object_id', models.PositiveIntegerField()),
                ('timestamp', models.DateTimeField(default=django.utils.timezone.now)),
                ('changes', models.JSONField(blank=True, null=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Administration Changelog',
                'verbose_name_plural': 'Administration Changelogs',
            },
        ),
    ]
